// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render Screen default Snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={true}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="default"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            ListEmptyComponent={[Function]}
            ListHeaderComponent={[Function]}
            data={Array []}
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            refreshing={true}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            viewabilityConfigCallbackPairs={Array []}
          >
            <RCTRefreshControl />
            <View>
              <View
                onLayout={[Function]}
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderColor": "#cccaca",
                      "borderWidth": 1,
                      "flex": 1,
                      "flexDirection": "row",
                      "height": 50,
                      "justifyContent": "space-between",
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#37a4be",
                        "fontWeight": "bold",
                        "justifyContent": "center",
                        "opacity": 1,
                        "textAlign": "center",
                        "width": "25%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                          },
                          Object {
                            "fontWeight": "bold",
                          },
                        ]
                      }
                    >
                      New
                    </Text>
                  </View>
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#f2f0f0",
                        "justifyContent": "center",
                        "opacity": 1,
                        "textAlign": "center",
                        "width": "25%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                          },
                          false,
                        ]
                      }
                    >
                      Top
                    </Text>
                  </View>
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#f2f0f0",
                        "justifyContent": "center",
                        "opacity": 1,
                        "textAlign": "center",
                        "width": "25%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                          },
                          false,
                        ]
                      }
                    >
                      Popular
                    </Text>
                  </View>
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "stretch",
                        "backgroundColor": "#f2f0f0",
                        "justifyContent": "center",
                        "opacity": 1,
                        "textAlign": "center",
                        "width": "25%",
                      }
                    }
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                          },
                          false,
                        ]
                      }
                    >
                      Hot
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 3,
                    "height": 1134,
                    "justifyContent": "center",
                  }
                }
              >
                <ActivityIndicator
                  size="large"
                />
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
